// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CompaniesColumns holds the columns for the "companies" table.
	CompaniesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "domain", Type: field.TypeString},
	}
	// CompaniesTable holds the schema information for the "companies" table.
	CompaniesTable = &schema.Table{
		Name:       "companies",
		Columns:    CompaniesColumns,
		PrimaryKey: []*schema.Column{CompaniesColumns[0]},
	}
	// InvitationsColumns holds the columns for the "invitations" table.
	InvitationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "invitee_email", Type: field.TypeString},
		{Name: "status", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_invitations", Type: field.TypeInt, Nullable: true},
	}
	// InvitationsTable holds the schema information for the "invitations" table.
	InvitationsTable = &schema.Table{
		Name:       "invitations",
		Columns:    InvitationsColumns,
		PrimaryKey: []*schema.Column{InvitationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "invitations_users_invitations",
				Columns:    []*schema.Column{InvitationsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TeamsColumns holds the columns for the "teams" table.
	TeamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// TeamsTable holds the schema information for the "teams" table.
	TeamsTable = &schema.Table{
		Name:       "teams",
		Columns:    TeamsColumns,
		PrimaryKey: []*schema.Column{TeamsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// CompanyUsersColumns holds the columns for the "company_users" table.
	CompanyUsersColumns = []*schema.Column{
		{Name: "company_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// CompanyUsersTable holds the schema information for the "company_users" table.
	CompanyUsersTable = &schema.Table{
		Name:       "company_users",
		Columns:    CompanyUsersColumns,
		PrimaryKey: []*schema.Column{CompanyUsersColumns[0], CompanyUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "company_users_company_id",
				Columns:    []*schema.Column{CompanyUsersColumns[0]},
				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "company_users_user_id",
				Columns:    []*schema.Column{CompanyUsersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TeamUsersColumns holds the columns for the "team_users" table.
	TeamUsersColumns = []*schema.Column{
		{Name: "team_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// TeamUsersTable holds the schema information for the "team_users" table.
	TeamUsersTable = &schema.Table{
		Name:       "team_users",
		Columns:    TeamUsersColumns,
		PrimaryKey: []*schema.Column{TeamUsersColumns[0], TeamUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "team_users_team_id",
				Columns:    []*schema.Column{TeamUsersColumns[0]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "team_users_user_id",
				Columns:    []*schema.Column{TeamUsersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CompaniesTable,
		InvitationsTable,
		TeamsTable,
		UsersTable,
		CompanyUsersTable,
		TeamUsersTable,
	}
)

func init() {
	InvitationsTable.ForeignKeys[0].RefTable = UsersTable
	CompanyUsersTable.ForeignKeys[0].RefTable = CompaniesTable
	CompanyUsersTable.ForeignKeys[1].RefTable = UsersTable
	TeamUsersTable.ForeignKeys[0].RefTable = TeamsTable
	TeamUsersTable.ForeignKeys[1].RefTable = UsersTable
}
